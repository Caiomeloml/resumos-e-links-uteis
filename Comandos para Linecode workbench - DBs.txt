
-- Alguns comandos basicos (MySQL) DOS e WORKBENCH


--mostra DataBases existentes no BD
SHOW DATABASES;

--cria base de dados dentro do BD
CREATE DATABASE nomedobd;

-- create database se nao existir;
CREATE SCHEMA IF NOT EXISTS nomedoschema ou bd;

--entra no BD para verificar TABLES ou configurar
USE nomedobd;

--mostra tabelas existentes dentro do BD
SHOW TABLES;

-- Cria Tabela (nome)
CREATE TABLE nometable;
EX:
CREATE TABLE employee(
	Fname varchar(15) not null,
    Minit char,
    Lname varchar(15) not null,
    Ssn char(9) not null, 
    Bdate date,
    Address varchar(30),
    Sex char,
    Salary decimal(10,2),
    Super_ssn char(9),
    Dno int not null,
    constraint pk_employee primary key (Ssn)
);

-- selecionar e observa conteudo da tabela
select * from nomedatabela 

--descreve table
DESC nomedotable;

-- apaga o BD ou table
DROP DATABASE nomedobdOUtable;

-- Adicionar item na table
ALTER TABLE nomedatable ADD nomequequeroadd VARCHAR(11); ou DATE ou item que quero adicinar.

-- Remover coluna da table
ALTER TABLE nomedatable DROP COLUMN nomedoitem

-- Modificar coluna ou tipo de dados
ALTER TABLE nome_tabela MODIFY COLUMN nome_atributo tipo_dados CONDICAO;

--Adicionar constraint
ALTER TABLE nome_tabela ADD contraint_nome CONDICOES;

-- inserir dados no bd
nomedatabela Values ('valores referentes as colums') ex:
INSERT INTO dept_locations VALUES (1, 'Houston' dando match com tabelas criadas);

-- Alterar dados
UPDATE nometable SET nome_coluna='nomequeesta'







exemplo de casos:
--BD nome =  empresaaa_constraintsss
-- Table nomes = employee, departament, dept_location, project, works_on, dependent



--consulta as constrains (primary key, foreing key, outras constrains) do BD
select * from information_schema.table_constraints
	where constraint_schema = 'Nome do Banco de dados';


-- alterar Foreing constraint
alter table departament drop departament_ibfk_1;
    alter table departament
		add constraint fk_dept foreign key(Mgr_ssn) references employee(Ssn) 
        on update cascade;


-- retira a ambiguidade atrav√©s do alias ou As Statement
select * from departament, dept_locations where Dnumber = Dnumber; -- erro de ambiguidade

-- usando alias   AS    especificando a tabela ( departament AS d, dept_locations AS l)

SELECT Dname AS Department_name
	FROM departament AS d, dept_locations AS l
    WHERE d.Dnumber = l.Dnumber;

  
-- Juntar Tabelas Ex: Fname e Fname e adress e Bdate (tabela com esses dados e o nome que eu escolher)
select concat (Fname, ' ', Lname, ' ', salary) as NOMEDEESCOLHA from employee; 