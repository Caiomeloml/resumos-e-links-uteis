// Tipos de primitivos
//Boleam 
/*var vOuf = false;
console.log (typeof(vOuf));

//number
var numeroQualquer = 1;
console.log(typeof(numeroQualquer));

//string
var name = 'caio';
console.log(typeof(caio));

//function
var funcao = function() {}
console.log(typeof(funcao)); 
*/
//___________________________________________________________________
//como declarar
// Variavel e constate
/*var variavel = 'caio';
variavel = 'mudou';
console.log(variavel);

let variavel2 = 'caio';
variavel2 = 'mudou';
console.log(variavel2)

const constante = 'caio';
constate = 'mudou' // erro pois a constate nao pode ser alterado//
console.log;

var escopoGlobal = 'global';
console.log(escopoGlobal);

var escopoLocalInterno = 'local'; {
console.log(escopoLocalInterno);
}
escopoLocalInterno();  //chama a funcao
*/
//_________________________________________________________________
// Atribuição
/*var atribuicao = 'Caio'; // palavra atribuicao=caio

// Comparação ( verdadeiro ou falso ==)
var comparacao = '0' == 0; // verdadeiro
console.log(comparacao);
var comparacao = '0' == 1;  //falso
console.log(comparacao); 

//comparacao identica ( Valor e Tipo são iguais ===)
var comparacaoIdentica = '0' === 0;
console.log(comparacaoIdentica); 
*/
//___________________________________________________________________
/*
//adicao +
var adicao = 1 + 1;
console.log(adicao);

//subtracao -
var subtracao = 1 - 1;
console.log(subtracao);

//multiplicao *
var multiplicao = 2 * 2;
console.log(multiplicao);

//divisao Real /
var divisaoReal = 4 / 2;
console.log(divisaoReal);

//divisao inteiro %
var divisaoInteiro = 19 % 1;
console.log(divisaoInteiro);

//potenciação **
var potenciacao = 2 ** 5;
console.log(potenciacao);
*/
//___________________________________________________________________
//Maior que
/*var maiorQue = 5 > 2;
console.log(maiorQue);

//Menor que
var menorQue = 5 < 2;
console.log(menorQue);

// maior ou igual a 
var maiorOuIgual = 5 >= 2;
console.log(maiorOuIgual);

// menor ou igual a
var menorOuIgual = 5 <= 2;
console.log(menorOuIgual);
*/
//__________________________________________________________

//Operadores Logicos 
//&& considera que Todos precisam ser verdadeiros &&
/*var e = true && false;
console.log(e)

// || considera qualquer valor verdadeiro ||
var e = true || false;
console.log(e)

// ! Inverte valor ( V torna-se F ou F torna-se V)   !
var nao = !true
console.log(nao)
*/













// o que são vetores ou arrays

//como declarar um array
/* let array = ['string', 1, true];
console.log(array);
*/

// Pode Guardar Varios tipo de dados
/*let array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']];
console.log([0]); //[numero do array 0,1,2.3]

// array forEach (coloca um item dentro do array)
/* array.forEach(function(item, index){console.log(item, index)}
*/

// array push (Adiciona item no final do array)
/*let array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']];
array.push('novoItem');
console.log(array);
*/

// Array Pop (remove item no final do array)
/*let array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']];
array.pop();
console.log(array);
*/
// Array shift (remove item no inicio do array)
/*let array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']];
array.shift();
console.log(array);
*/

// Array unshift (adiciona item no inicio do array)
/*let array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']];
array.unshift('novoItem');
console.log(array);
*/

// Array indexOf (retorna um indice de um valor)
/*let array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']];
console.log(array.indexOf(true)); 
*/

// array splice() - remove ou substitui um item pelo indice
/*array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']];
array.splice(0, 3);
console.log(array);
*/

//array slice() - retorna apenas array selecionados
/*array = ['string', 1, true,['array1'],['array2'],['array3'],['array4']]
let novoArray = array.slice(0,3);
console.log(novoArray);
*/

// ________________ obejetos _____________________________________________________________________________
//manipulando obejetos

let object = {string: 'string', number: 1, Boolean: true, array: ['array'], objectInterno: { 
    objectInterno : 'objeto interno'}};

    //console.log(object) // dessa forma consigo abrir o item (obeject) e ver seu conteudo
    //console.log(obejct.number); //  abrir item obeject. abrir number que está dentro do obeject
 // console.log(object.array);  //  abrir item obeject. abrir array que está dentro do obeject

    //  desestruturação pode ser feito dessa forma
  /*  var string = object.string;
    console.log(string);   

    var arrayTeste= object.array;
    console.log(arrayTeste);
    */
    // desestruturação pode ser dessa forma
//var {escolho as propiedades que quero} = obeject;
var { string, Boolean, objectInterno} = object;
console.log(string, Boolean, objectInterno);